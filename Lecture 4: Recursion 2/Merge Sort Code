

void merge1(int arr[],int l,int mid,int r){
    int n1=mid-l+1;
    int n2=r-mid;
    int a[n1];int b[n2];
    for(int i=0;i<n1;i++){
    	a[i]=arr[l+i];
	}
	for(int i=0;i<n2;i++){
		b[i]=arr[mid+i+1];
	}
	int i=0,j=0;
	int k=l;
	while(i<n1 && j<n2){
		if(a[i]<b[j]){
			arr[k]=a[i];
			k++;i++;
		}else{
			arr[k]=b[j];
			k++;j++;
		}
	}
	while(i<n1){
		arr[k]=a[i];
		k++;i++;
	}
	while(j<n2){
		arr[k]=b[j];
		k++;j++;
	}
}
void merge_call(int  a[],int l,int r){
	if(l<r){
		int mid=(l+r)/2;
		merge_call(a,l,mid);
		merge_call(a,mid+1,r);
		merge1(a,l,mid,r);
	}
}
void mergeSort(int a[], int r){
	merge_call(a,0,r-1);    
}


